const mongoose = require('mongoose')

const departmentSchema = new mongoose.Schema(
    {
        name: String,
        manager: {
            type: mongoose.Schema.Types.ObjectId,
            ref: "employee",
            //default: "000000000000000000000000"
            default: function() {
                if (this.manager === '' || this.manager === undefined) {
                    return mongoose.Types.ObjectId();
                } else {
                    return this.manager;
                }
            }
        }
    },
    { versionKey: false, strictPopulate: false }
)

// פונקציה להכנסת רשימת המחלקות
const insertDefaultDepartments = async () => {
    const defaultDepartments = [
        { name: 'Department 1' },
        { name: 'Department 2' },
        // ניתן להוסיף עוד מחלקות לרשימה כרצונך
    ];
    await Department.insertMany(defaultDepartments);
    console.log('Default departments inserted.');
};

// הוספת ההוק לפני הביצוע של module.exports
departmentSchema.post('save', async function (doc, next) {
    await insertDefaultDepartments();
    next();
});

const Department = mongoose.model('department', departmentSchema)


//from controllers:

//const express = require('express')
 //const session = require('express-session')

// const attachUsername = (req, res, next) => {
//     const username = req.session.username; // או מהאובייקט אותו את משתמשת
//     req.username = username; // הוספת שם המשתמש לתוך הבקשה
//     next(); // המשך לפונקציה הבאה בשרשרת middleware
// };

// const setPerson = async (obj) => {
//     const data = await jf.readFile(file);
//     data.persons.push(obj);
//     await jf.writeFile(file, data);
//     return 'Added Successfully';
//   };